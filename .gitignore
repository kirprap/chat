# Rust Chat Application (.gitignore)
# An open source Rust/Yew WebSocket chat application

### Rust / Cargo ###
/target/
**/target/
debug/
release/
**/*.rs.bk
*.pdb

# Keep Cargo.lock for binary projects (good practice for applications)
# /Cargo.lock

### WASM / Frontend ###
/dist/
/pkg/
**/dist/
**/pkg/
*.wasm
*.wasm.map

### Development ###
# Binary files
*.exe
*.dll
*.so
*.dylib

# Debug files
*.dSYM/
*.su
*.idb

# Build artifacts
build/
out/

### Dependencies ###
# Node (if using npm for frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Rust dependencies
**/.cargo/
vendor/

### IDEs and Editors ###
# VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# IntelliJ
.idea/
*.iml
*.iws
*.ipr

# Visual Studio
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Vim/Emacs
*.swp
*.swo
*~
\#*\#
.\#*

### OS Generated ###
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

### Environment ###
.env
.env.*
!.env.example

### Docker ###
.docker/
docker-compose.override.yml

### Logs ###
logs/
*.log

### Testing ###
coverage/
.coverage
junit.xml
**/*test.rs.bk

### Documentation ###
# Keep documentation in git
!docs/
!*.md

### Cache ###
.cache/
CACHEDIR.TAG

### Project Specific ###
# Frontend specific
/chat/dist/
/chat/pkg/
/chat/target/

# Backend specific
/Backend/target/
/Backend/debug/

### Temporary Files ###
*.tmp
*.temp
.temp/
tmp/

# Keep these files
!.gitignore
!.dockerignore
!Dockerfile
!docker-compose.yml
!README.md
!LICENSE

